// Chef is playing a card game with his friend Rick Sanchez. He recently won against Rick's grandson Morty; however, Rick is not as easy to beat. The rules of this game are as follows:

// The power of a positive integer is the sum of digits of that integer. For example, the power of 13 is 1+3=4.
// Chef and Rick receive randomly generated positive integers. For each player, let's call the integer he received final power.
// The goal of each player is to generate a positive integer such that its power (defined above) is equal to his final power.
// The player who generated the integer with fewer digits wins the game. If both have the same number of digits, then Rick cheats and wins the game.
// You are given the final power of Chef PC and the final power of Rick PR. Assuming that both players play optimally, find the winner of the game and the number of digits of the integer he generates.

// Input
// The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
// The first and only line of each test case contains two space-separated integers PC and PR.
// Output
// For each test case, print a single line containing two space-separated integers. The first of these integers should be either 0 if Chef wins or 1 if Rick wins. The second integer should be the number of digits of the integer generated by the winner.

// Constraints
// 1≤T≤105
// 1≤PC,PR≤106
#include <iostream>
using namespace std;

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
	    int chef,rick,digitc,digitr;
	    cin>>chef>>rick;
	    if(chef%9==0)
	        digitc=chef/9;
	   else
	        digitc=(chef/9)+1;

	   if(rick%9==0)
	   digitr=rick/9;
	   else
	   digitr=(rick/9)+1;

	   if(digitc<digitr)
	   cout<<0<<" "<<digitc<<"\n";
	   else
	   cout<<1<<" "<<digitr<<"\n";
	}
	return 0;
}
